<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- spring 加载配置文件常用方式 -->

    <!-- 1、使用context标签，通过${xxx}或者@Value(${xxx})访问 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:config/jdbc.properties"/>

    <!-- 2、使用util标签，通过#{util_Spring['jdbc.username']}或者@Value(value="#{util_Spring['jdbc.username']}") 访问 -->
    <util:properties id="util_Spring"  local-override="true" location="classpath:config/jdbc.properties"/>

    <!-- 3、在java类中使用PropertySource注解 ,JdbcConfig-->

    <!-- 4、通过PropertyPlaceholderConfigurer 读取配置文件,这里采用通过PropertyPlaceholderConfigurer方式-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/jdbc.properties</value>
            </list>
        </property>
    </bean>

</beans>